PROCEDURE "GetUserSalesGroup"(email NVARCHAR(255))
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER AS
BEGIN
      -- SELECT DISTINCT USERT."FIRST_NAME", USERT."LAST_NAME", USERT."EMAIL", 
      -- STRING_AGG(USER_SALES_GROUP_MAP."SALES_GROUP", ',') AS "SALES_GROUP",
      -- MUR."ROLE_ID"
      -- FROM "USER" AS USERT
      -- JOIN "USER_SALES_GROUP_MAP" AS USER_SALES_GROUP_MAP ON USERT."ID" = USER_SALES_GROUP_MAP."USER_ID" AND USER_SALES_GROUP_MAP."IS_ARCHIVED" = 0
      -- JOIN "MAP_USER_ROLE" AS MUR ON USERT."ID" = MUR."USER_ID"
      -- WHERE LOWER(USERT."EMAIL") = LOWER(:email)
      -- GROUP BY USERT."FIRST_NAME", USERT."LAST_NAME",USERT."EMAIL", MUR."ROLE_ID";

      SELECT USERT."FIRST_NAME", USERT."LAST_NAME", USERT."EMAIL", 
      STRING_AGG(PCUSTOMER."SALES_GRP", ',') AS "SALES_GROUP",MUR."ROLE_ID"
      FROM "USER" AS USERT
      JOIN "USER_SALES_GROUP_MAP" AS USER_SALES_GROUP_MAP ON USERT."ID" = USER_SALES_GROUP_MAP."USER_ID" AND USER_SALES_GROUP_MAP."IS_ARCHIVED" = 0
      JOIN "MAP_USER_ROLE" AS MUR ON USERT."ID" = MUR."USER_ID"
      JOIN ( SELECT DISTINCT "SALES_GRP"
             FROM "/BI0/PCUSTOMER" ) AS PCUSTOMER ON USER_SALES_GROUP_MAP."SALES_GROUP" = PCUSTOMER."SALES_GRP"
      JOIN "/BI0/SSALES_GRP" AS SALES ON SALES."SALES_GRP" = PCUSTOMER."SALES_GRP"
             WHERE LOWER(USERT."EMAIL") = LOWER(:email)
      GROUP BY USERT."FIRST_NAME", USERT."LAST_NAME",USERT."EMAIL", MUR."ROLE_ID";
END;